AWSTemplateFormatVersion: '2010-09-09'
Description: This template is for COMSE6998 HW3 Spam filter
Parameters: 
  SourceS3Bucket:
    Type: String
    Description: Name of the SourceS3Bucket where the codes are stored
    Default: comse6998-a3-sagemaker    
  EmailBucketName:
    Type: String
    Description: Name of the S3Bucket where emails will be stored
    Default: cf-comse6998-a3-email
  EndpointName:
    Type: String
    Description: The SageMaker endpoint for Spam classfication
    Default: sms-spam-classifier-mxnet-2022-04-15-20-12-20-585
  SESRuleSetName:
    Type: String
    Description: The SES rule set name
    Default: cf-email-receiving-rule-set 
  SESRuleName:
    Type: String
    Description: The SES rule set name
    Default: cf-email-receiving-rule

Resources:
  SpamFilterLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/AmazonSageMakerFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonSESFullAccess'     

  LambdaLayerSageMaker:
    Type: "AWS::Lambda::LayerVersion"
    Properties:
      CompatibleRuntimes:
      - python3.6
      Content:
        S3Bucket: !Ref SourceS3Bucket
        S3Key: SageMakerLayer.zip
      LayerName: "cf-sagemaker"

  SpamFilterLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref SourceS3Bucket
        S3Key: LambdaSpamFilter.zip
      Environment:
        Variables:
          ENDPOINT: !Ref EndpointName          
      Handler: spam_filter.lambda_handler
      MemorySize: 512
      Role: !GetAtt 
        - SpamFilterLambdaRole
        - Arn
      Runtime: python3.6
      Timeout: 5
      FunctionName: cf-spam-filter
      Layers:
      - !Ref LambdaLayerSageMaker
    
  LambdaTriggerPermission:
    Type: AWS::Lambda::Permission
    DependsOn: SpamFilterLambda
    Properties:
      FunctionName:
        Fn::GetAtt:
          - SpamFilterLambda
          - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:s3:::${EmailBucketName}

  EmailS3Bucket:
    Type: AWS::S3::Bucket
    DependsOn: LambdaTriggerPermission
    Properties:
      BucketName: !Ref EmailBucketName
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:Put            
            Function: !GetAtt
              - SpamFilterLambda
              - Arn

  EmailBucketPolicy:    
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref EmailS3Bucket
      PolicyDocument: 
        Statement:
          Sid: AllowSESPuts
          Effect: Allow
          Principal:
            Service: ses.amazonaws.com
          Action: s3:PutObject
          Resource: 
            Fn::Sub: arn:aws:s3:::${EmailBucketName}/*
          Condition:
            StringEquals:
              AWS:SourceArn: 
                Fn::Sub: arn:aws:ses:us-east-1:896744021300:receipt-rule-set/${SESRuleSetName}:receipt-rule/${SESRuleName}
              AWS:SourceAccount: '896744021300'

  SESRuleSet:
    Type: AWS::SES::ReceiptRuleSet
    Properties: 
      RuleSetName: !Ref SESRuleSetName

  SESRule:
    Type: AWS::SES::ReceiptRule
    Properties:
      Rule:        
        Actions:
          - S3Action:
              BucketName: !Ref EmailBucketName
        Enabled: true
        Name: !Ref SESRuleName
      RuleSetName: !Ref SESRuleSet
